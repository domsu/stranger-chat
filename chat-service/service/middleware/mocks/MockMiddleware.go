// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/domsu/stranger-chat/middleware (interfaces: IMiddleware)

// Package mocks is a generated GoMock package.
package mocks

import (
	model "github.com/domsu/stranger-chat/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIMiddleware is a mock of IMiddleware interface
type MockIMiddleware struct {
	ctrl     *gomock.Controller
	recorder *MockIMiddlewareMockRecorder
}

// MockIMiddlewareMockRecorder is the mock recorder for MockIMiddleware
type MockIMiddlewareMockRecorder struct {
	mock *MockIMiddleware
}

// NewMockIMiddleware creates a new mock instance
func NewMockIMiddleware(ctrl *gomock.Controller) *MockIMiddleware {
	mock := &MockIMiddleware{ctrl: ctrl}
	mock.recorder = &MockIMiddlewareMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIMiddleware) EXPECT() *MockIMiddlewareMockRecorder {
	return m.recorder
}

// Process mocks base method
func (m *MockIMiddleware) Process(arg0 *model.Context) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Process", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Process indicates an expected call of Process
func (mr *MockIMiddlewareMockRecorder) Process(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Process", reflect.TypeOf((*MockIMiddleware)(nil).Process), arg0)
}
