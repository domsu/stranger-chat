// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/domsu/stranger-chat/model/transformer (interfaces: IPartialResponseTransformer)

// Package mocks is a generated GoMock package.
package mocks

import (
	model "github.com/domsu/stranger-chat/model"
	googleactions "github.com/domsu/stranger-chat/model/external/googleactions"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIPartialResponseTransformer is a mock of IPartialResponseTransformer interface
type MockIPartialResponseTransformer struct {
	ctrl     *gomock.Controller
	recorder *MockIPartialResponseTransformerMockRecorder
}

// MockIPartialResponseTransformerMockRecorder is the mock recorder for MockIPartialResponseTransformer
type MockIPartialResponseTransformerMockRecorder struct {
	mock *MockIPartialResponseTransformer
}

// NewMockIPartialResponseTransformer creates a new mock instance
func NewMockIPartialResponseTransformer(ctrl *gomock.Controller) *MockIPartialResponseTransformer {
	mock := &MockIPartialResponseTransformer{ctrl: ctrl}
	mock.recorder = &MockIPartialResponseTransformerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIPartialResponseTransformer) EXPECT() *MockIPartialResponseTransformerMockRecorder {
	return m.recorder
}

// Transform mocks base method
func (m *MockIPartialResponseTransformer) Transform(arg0 model.PartialResponse, arg1 model.UserStorage, arg2 model.Messages, arg3 model.Config) googleactions.Response {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Transform", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(googleactions.Response)
	return ret0
}

// Transform indicates an expected call of Transform
func (mr *MockIPartialResponseTransformerMockRecorder) Transform(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Transform", reflect.TypeOf((*MockIPartialResponseTransformer)(nil).Transform), arg0, arg1, arg2, arg3)
}
